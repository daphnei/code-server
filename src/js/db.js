// Generated by CoffeeScript 1.7.1
(function() {
  var Q, connection, createQuestion, createQuestionOrUpdateScore, doesQuestionExist, getNextQuestionId, mysql, updateQuestionScore;

  mysql = require('mysql');

  Q = require('q');

  connection = mysql.createConnection({
    host: 'sql3.freemysqlhosting.net',
    user: 'sql331606',
    password: 'nS5!nZ4*',
    database: 'sql331606',
    port: 3306
  });

  exports.connectAndQuery = function(query, queryArgs) {
    var data;
    if (queryArgs == null) {
      queryArgs = [];
    }
    data = Q.defer();
    connection.query(query, queryArgs, function(err, rows, fields) {
      if (err) {
        return data.reject(err);
      } else {
        return data.resolve(rows);
      }
    });
    return data.promise;
  };

  exports.getMostDifficultQuestions = function(limit) {
    var queryString;
    queryString = "SELECT * FROM questions WHERE num_answers >= 5 ORDER BY average_score LIMIT ?";
    return exports.connectAndQuery(queryString, [limit]);
  };

  exports.getQuestions = function(type, limit) {
    var queryString, tableName;
    tableName = mysql.escapeId(type + '_questions');
    queryString = "SELECT * FROM questions INNER JOIN " + tableName + " ON " + tableName + ".qid = questions.id LIMIT ?";
    return exports.connectAndQuery(queryString, [limit]);
  };

  getNextQuestionId = function() {
    var nextId;
    nextId = Q.defer();
    exports.connectAndQuery('SELECT COUNT(*) FROM questions').then(function(data) {
      return nextId.resolve(data['COUNT(*)']);
    });
    return nextId.promise;
  };

  doesQuestionExist = function(type, food1, food2) {
    var weExist;
    weExist = q.defer();
    exports.connectAndQuery('SELECT COUNT(*) FROM questions WHERE type = ? AND food1 = ? AND food2 = ?', [type, food1, food2], function(data) {
      return weExist.resolve(parseInt(data["COUNT(*)"]) === 0);
    });
    return weExist.promise;
  };

  updateQuestionScore = function(type, food1, food2, score) {
    var query;
    query = "UPDATE questions SET num_responses = num_responses + 1, total_score = total_score + ? WHERE type = ? AND food1 = ? AND food2 = ?";
    return exports.connectAndQuery(query, [score, type, food1, food2]);
  };

  createQuestion = function(type, food1, food2, score) {
    var query;
    query = "INSERT INTO questions (type, food1, food2, num_responses, total_score) VALUES (?, ?, ?, ?, ?)";
    return exports.connectAndQuery(query, [type, food1, food2, 1, score]);
  };

  createQuestionOrUpdateScore = function(type, food1, food2, score) {
    return doesQuestionExist(type, food1, food2).then(function(exists) {
      if (exists) {
        return updateQuestionScore(type, food1, food2, score);
      } else {
        return createQuestion(type, food1, food2, score);
      }
    });
  };

}).call(this);
